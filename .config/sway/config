#  _____      ____ _ _   _
# / __\ \ /\ / / _` | | | |
# \__ \\ V  V | (_| | |_| |
# |___/ \_/\_/ \__,_|\__, |
#                    |___/

#
# Common Variables
#

    # Mod4 for logo key. Mod1 for alt.
    set $mod Mod4
    set $alt Mod1

    # Background
    #set $background /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png
    set $background ~/.config/sway/wallpapers/serene_view.jpg
    #/usr/share/backgrounds/Gwallpaper-gLinux-vertical.png

    # Home row direction keys, like vim
    set $left h
    set $down j
    set $up k
    set $right l

#
# Common applications
#

    # Your preferred terminal emulator
    set $term ~/.local/bin/kitty

    # Your preferred application launcher
    # Note: pass the final command to swaymsg so that the resulting window can be opened
    # on the original workspace that the command was run on.
    #set $menu dmenu_path | dmenu | xargs swaymsg exec --
    set $menu wofi -Ii --show=drun

    # Screen lock
    set $lock swaylock --grace 0

#
# System variables
#
    include /etc/sway/config-vars.d/*

#
# System settings
#

    include ~/.config/sway/google.config

    # Use auto-orientation (as opposed to horizontal)
    default_orientation auto
    # Use gaps
    gaps {
        inner 5
        outer 5
    }
    # Don't include title-bar in border
    default_border pixel 5
    smart_borders on

    # Initialize ssh-agent keyring
    exec sh -c "ssh-agent -s -a $SSH_AUTH_SOCK"

    # Export display settings to D-Bus
    exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

    # Overlay bar (for e.g. volume control)
    set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
    exec rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

    # Startup scripts
    exec_always ~/.config/sway/daemons.sh
    exec_always ~/.config/sway/swayidle.sh

#
# I/O configuration
#

    # Default wallpaper
    output * bg $background stretch

    # Disable laptop's display when lid is closed
    bindswitch --reload lid:on output eDP-1 disable
    bindswitch --reload lid:off output eDP-1 enable

    #
    # Example configuration:
    #
    #   output HDMI-A-1 resolution 1920x1080 position 1920,0
    #
    # You can get the names of your outputs by running: swaymsg -t get_outputs

    ### Input configuration
    #
    # Example configuration:
    #
    #   input "2:14:SynPS/2_Synaptics_TouchPad" {
    #       dwt enabled
    #       tap enabled
    #       natural_scroll enabled
    #       middle_emulation enabled
    #   }
    #
    # You can get the names of your inputs by running: swaymsg -t get_inputs
    # Read `man 5 sway-input` for more information about this section.

    # Config touchpad controls
    input type:touchpad {
        dwt enabled
        tap enabled
        natural_scroll enabled
        pointer_accel 0.35
    }
    input type:keyboard {
        xkb_numlock enabled
    }

#
# Key bindings
#

# Use `wev` to get wayland input keycodes

    #
    # Basics
    #

    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Window switcher
    bindsym $mod+c exec "~/.config/sway/window_picker.sh"

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    #
    # Moving around
    #

    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window around by adding Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # Move the focused workspace around by adding Control+Shift
    bindsym $mod+Control+Shift+$left move workspace to left
    bindsym $mod+Control+Shift+$down move workspace to down
    bindsym $mod+Control+Shift+$up move workspace to up
    bindsym $mod+Control+Shift+$right move workspace to right
    # them arrow keys
    bindsym $mod+Control+Shift+Left move workspace to left
    bindsym $mod+Control+Shift+Down move workspace to down
    bindsym $mod+Control+Shift+Up move workspace to up
    bindsym $mod+Control+Shift+Right move workspace to right

    #
    # Workspaces
    #

    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+bracketleft workspace prev_on_output
    bindsym $mod+bracketright workspace next_on_output
    bindsym $mod+Shift+Tab workspace prev_on_output
    bindsym $mod+Tab workspace next_on_output
    # Send focused container to workspace and switch to it
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    bindsym $mod+Shift+bracketleft move container to workspace prev_on_output; workspace prev_on_output
    bindsym $mod+Shift+bracketright move container to workspace next_on_output; workspace next_on_output
    # Send focused container to workspace
    bindsym $mod+Control+Shift+1 move container to workspace number 1
    bindsym $mod+Control+Shift+2 move container to workspace number 2
    bindsym $mod+Control+Shift+3 move container to workspace number 3
    bindsym $mod+Control+Shift+4 move container to workspace number 4
    bindsym $mod+Control+Shift+5 move container to workspace number 5
    bindsym $mod+Control+Shift+6 move container to workspace number 6
    bindsym $mod+Control+Shift+7 move container to workspace number 7
    bindsym $mod+Control+Shift+8 move container to workspace number 8
    bindsym $mod+Control+Shift+9 move container to workspace number 9
    bindsym $mod+Control+Shift+0 move container to workspace number 10
    bindsym $mod+Control+Shift+bracketleft move container to workspace prev_on_output
    bindsym $mod+Control+Shift+bracketright move container to workspace next_on_output

    #
    # Layout stuff
    #

    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout toggle stacking split
    bindsym $mod+w layout toggle tabbed split
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Make the current focus follow on workspace change
    bindsym $mod+Shift+f sticky toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent

    #
    # Screenshots
    #

    # Screenshots will copy to the clipboard by default
    # When holding Control, write to the ~/Pictures directory instead

    # Screenshot current focused window
    bindsym Print exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy
    bindsym Control+Print exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')"

    # Screenshot entire desktop
    bindsym $alt+Print exec grim - | wl-copy
    bindsym $alt+Control+Print exec grim

    # Screenshot mouse selection
    bindsym $mod+Print exec grim -g "$(slurp)" - | wl-copy
    bindsym $mod+Control+Print exec grim -g "$(slurp)"


    #
    # Scratchpad
    #

    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

    #
    # Media/brightness buttons
    #

    # Unmute, modify volume, then pipe result to wob
    bindsym XF86AudioRaiseVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    bindsym XF86AudioLowerVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ +1% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ -1% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    # Toggle mute, then pipe either 0 or original volume to wob
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && ([[ $(pactl get-sink-mute @DEFAULT_SINK@ | cut -d' ' -f2) = 'yes' ]] && echo '0' || pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}') > $WOBSOCK
    # Pipe brightness to wob
    bindsym XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym Shift+XF86MonBrightnessUp exec brightnessctl set +1% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym Shift+XF86MonBrightnessDown exec brightnessctl set 1%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

    #
    # Resizing containers
    #
    mode "resize" {
        # Minus/Equal will shrink/grow container width
        # Add Shift to shrink/grow height
        bindsym minus resize shrink width 10px
        bindsym equal resize grow width 10px
        bindsym Shift+minus resize shrink height 10px
        bindsym Shift+equal resize grow height 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Space mode "default"
    }
    bindsym $mod+r mode "resize"

    #
    # Modify container opacity
    #
    mode "opacity" {
        bindsym $left opacity minus 0.1
        bindsym $down opacity minus 0.05
        bindsym $up opacity plus 0.05
        bindsym $right opacity plus 0.1

        # Ditto, with arrow keys
        bindsym Left opacity minus 0.1
        bindsym Down opacity minus 0.05
        bindsym Up opacity plus 0.05
        bindsym Right opacity plus 0.1

        bindsym minus opacity minus 0.1
        bindsym equal opacity plus 0.1

        bindsym 1 opacity 0.1
        bindsym 2 opacity 0.2
        bindsym 3 opacity 0.3
        bindsym 4 opacity 0.4
        bindsym 5 opacity 0.5
        bindsym 6 opacity 0.6
        bindsym 7 opacity 0.7
        bindsym 8 opacity 0.8
        bindsym 9 opacity 0.9
        bindsym 0 opacity 1

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Space mode "default"
    }
    bindsym $mod+o mode "opacity"
    bindsym $mod+less opacity minus 0.1
    bindsym $mod+greater opacity plus 0.1

    #
    # System controls:
    #

    # Manual lock
    bindsym $mod+Escape exec $lock
    # Power menu
    bindsym $mod+Shift+Escape exec "~/.config/sway/powermenu.sh"
    # Dismiss notifications
    bindsym $mod+q exec "makoctl dismiss -a"
    # Restore most-recent dismissed notification
    bindsym $mod+grave exec "makoctl restore"
    # Clipboard manager
    bindsym $mod+p exec clipman pick -t wofi
    # Show hotkeys
    bindsym $mod+Shift+slash exec "~/.config/sway/hotkeys.sh"

#
# Specific app settings
#

    # No borders for browsers
    for_window [app_id="firefox"] border none
    for_window [app_id="google-chrome"] border none
    # Disable swayidle during browser fullscreen
    for_window [app_id="firefox"] inhibit_idle fullscreen
    for_window [app_id="google-chrome"] inhibit_idle fullscreen
    # Always float some applications by default
    for_window [app_id="pavucontrol"] floating enable
    for_window [app_id="blueman-manager"] {
        floating enable
        resize set height 50 ppt
        resize set width 10 ppt
        move position 69 ppt 1 ppt
    }
    for_window [app_id="nmtui"] {
        floating enable
        resize set height 75 ppt
        resize set width 50 ppt
    }
    for_window [app_id="prompt"] {
        floating enable
    }
    for_window [title="Picture in picture"] {
        floating enable
        resize set height 50 ppt
        resize set width 50 ppt
        sticky enable
    }
    # Hide some windows automatically
    for_window [title="meet.google.com is sharing your screen."] {
        move scratchpad
    }

#
# System config
#
    include /etc/sway/config.d/*
