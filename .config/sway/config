#  _____      ____ _ _   _
# / __\ \ /\ / / _` | | | |
# \__ \\ V  V | (_| | |_| |
# |___/ \_/\_/ \__,_|\__, |
#                    |___/

#
# Common Variables
#

    # Notable key aliases (mod is super/meta)
    # Note that mouse bindings only work on window title-bars by default
    set $mod Mod4
    set $alt Mod1
    set $mouse_left button1
    set $mouse_middle button2
    set $mouse_right button3
    set $mouse_scroll_up button4
    set $mouse_scroll_down button5
    set $mouse_scroll_left button6
    set $mouse_scroll_right button7
    set $mouse_forward button8
    set $mouse_backward button9

    # Background
    # Note: requires `swaybg`
    #set $background /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png
    set $background ~/.config/sway/wallpapers/serene_view.jpg
    #/usr/share/backgrounds/Gwallpaper-gLinux-vertical.png

    # Home row direction keys, like vim
    set $left h
    set $down j
    set $up k
    set $right l

#
# Common applications
#

    # Your preferred terminal emulator
    set $term kitty

    # Your preferred application launcher
    # Note: pass the final command to swaymsg so that the resulting window can be opened
    # on the original workspace that the command was run on.
    #set $menu dmenu_path | dmenu | xargs swaymsg exec --
    set $menu wofi -Ii --show=drun

    # Screen lock
    set $lock swaylock --grace 0

#
# System variables
#
    include /etc/sway/config-vars.d/*

#
# System settings
#

    include ~/.config/sway/google.config

    # Use auto-orientation (as opposed to horizontal)
    default_orientation auto
    # Use gaps
    gaps {
        inner 5
        outer 5
    }
    # Don't include title-bar in border
    default_border pixel 5
    smart_borders on
    smart_gaps on

    # Initialize ssh-agent keyring
    exec sh -c "ssh-agent -s -a $SSH_AUTH_SOCK"

    # Export display settings to D-Bus
    exec dbus-update-activation-environment --systemd DISPLAY I3SOCK SWAYSOCK WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway

    # Overlay bar (for e.g. volume control)
    set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock
    exec_always rm -f $WOBSOCK && mkfifo $WOBSOCK && tail -f $WOBSOCK | wob

    # Startup scripts
    exec_always ~/.config/sway/daemons.sh
    exec_always ~/.config/sway/swayidle.sh

#
# I/O configuration
#

    # Default wallpaper
    output * bg $background stretch

    # Disable laptop's display when lid is closed
    bindswitch --reload lid:on output eDP-1 disable
    bindswitch --reload lid:off output eDP-1 enable

    #
    # Example configuration:
    #
    #   output HDMI-A-1 resolution 1920x1080 position 1920,0
    #
    # You can get the names of your outputs by running: swaymsg -t get_outputs

    ### Input configuration
    #
    # Example configuration:
    #
    #   input "2:14:SynPS/2_Synaptics_TouchPad" {
    #       dwt enabled
    #       tap enabled
    #       natural_scroll enabled
    #       middle_emulation enabled
    #   }
    #
    # You can get the names of your inputs by running: swaymsg -t get_inputs
    # Read `man 5 sway-input` for more information about this section.

    # Config touchpad controls
    input type:touchpad {
        dwt enabled
        tap enabled
        natural_scroll enabled
        pointer_accel 0.35
    }
    input type:keyboard {
        xkb_numlock enabled
    }

#
# Key bindings
#

# Use `wev` to get wayland input keycodes

    #
    # Basics
    #

    #? Super+Return              | Start a terminal
    bindsym $mod+Return exec $term
    #? Super+d                   | Start application launcher
    bindsym $mod+d exec $menu
    #? Super+i                   | Open window switcher selection
    bindsym $mod+i exec "~/.config/sway/window_picker.sh"
    #? Super+Shift+q             | Kill focused window
    #? Control+Super+MouseRight  | Kill focused window
    bindsym $mod+Shift+q kill
    bindsym --whole-window --border $mod+Control+$mouse_right kill

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    #? Super+Shift+c             | Reload the configuration file
    bindsym $mod+Shift+c reload

    #
    # Moving around
    #

    # Use Vim keys to move focus
    #? Super+h     | Move focus left
    #? Super+j     | Move focus down
    #? Super+k     | Move focus up
    #? Super+l     | Move focus right
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right

    # Or use arrow keys
    #? Super+Left  | Move focus left
    #? Super+Down  | Move focus down
    #? Super+Up    | Move focus up
    #? Super+Right | Move focus right
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window around by adding Shift
    #? Super+Shift+h      | Move focused window left
    #? Super+Shift+j      | Move focused window down
    #? Super+Shift+k      | Move focused window up
    #? Super+Shift+l      | Move focused window right
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    #? Super+Shift+Left   | Move focused window left
    #? Super+Shift+Down   | Move focused window down
    #? Super+Shift+Up     | Move focused window up
    #? Super+Shift+Right  | Move focused window right
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right

    # Move the focused workspace around by adding Control+Shift
    #? Control+Super+Shift+h     | Move focused workspace left
    #? Control+Super+Shift+j     | Move focused workspace down
    #? Control+Super+Shift+k     | Move focused workspace up
    #? Control+Super+Shift+l     | Move focused workspace right
    bindsym $mod+Control+Shift+$left move workspace to left
    bindsym $mod+Control+Shift+$down move workspace to down
    bindsym $mod+Control+Shift+$up move workspace to up
    bindsym $mod+Control+Shift+$right move workspace to right
    # them arrow keys
    #? Control+Super+Shift+Left  | Move focused workspace left
    #? Control+Super+Shift+Down  | Move focused workspace down
    #? Control+Super+Shift+Up    | Move focused workspace up
    #? Control+Super+Shift+Right | Move focused workspace right
    bindsym $mod+Control+Shift+Left move workspace to left
    bindsym $mod+Control+Shift+Down move workspace to down
    bindsym $mod+Control+Shift+Up move workspace to up
    bindsym $mod+Control+Shift+Right move workspace to right

    #
    # Workspaces
    #

    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # Switch to workspace
    #? Super+1                   | Switch to workspace 1
    #? Super+2                   | Switch to workspace 2
    #? Super+3                   | Switch to workspace 3
    #? Super+4                   | Switch to workspace 4
    #? Super+5                   | Switch to workspace 5
    #? Super+6                   | Switch to workspace 6
    #? Super+7                   | Switch to workspace 7
    #? Super+8                   | Switch to workspace 8
    #? Super+9                   | Switch to workspace 9
    #? Super+0                   | Switch to workspace 10
    #? Super+[                   | Switch to previous workspace on display
    #? Super+]                   | Switch to next workspace on display
    #? Super+Shift+Tab           | Switch to previouw workspace on display
    #? Super+Tab                 | Switch to next workspace on display
    #? Super+MouseScrollUp       | Switch to previous workspace on display
    #? Super+MouseScrollDown     | Switch to next workspace on display
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    bindsym $mod+bracketleft workspace prev_on_output
    bindsym $mod+bracketright workspace next_on_output
    bindsym $mod+Shift+Tab workspace prev_on_output
    bindsym $mod+Tab workspace next_on_output
    bindsym --whole-window --border $mod+$mouse_scroll_up workspace prev_on_output
    bindsym --whole-window --border $mod+$mouse_scroll_down workspace next_on_output
    # Send focused container to workspace and switch to it
    #? Super+Shift+1                | Move focused window to workspace 1 and switch to it
    #? Super+Shift+2                | Move focused window to workspace 2 and switch to it
    #? Super+Shift+3                | Move focused window to workspace 3 and switch to it
    #? Super+Shift+4                | Move focused window to workspace 4 and switch to it
    #? Super+Shift+5                | Move focused window to workspace 5 and switch to it
    #? Super+Shift+6                | Move focused window to workspace 6 and switch to it
    #? Super+Shift+7                | Move focused window to workspace 7 and switch to it
    #? Super+Shift+8                | Move focused window to workspace 8 and switch to it
    #? Super+Shift+9                | Move focused window to workspace 9 and switch to it
    #? Super+Shift+0                | Move focused window to workspace 10 and switch to it
    #? Super+Shift+[                | Move focused window to previous workspace on display and switch to it
    #? Super+Shift+]                | Move focused window to next workspace on display and switch to it
    #? Super+Shift+MouseScrollUp    | Move focused window to previous workspace on display and switch to it
    #? Super+Shift+MouseScrollDown  | Move focused window to next workspace on display and switch to it
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    bindsym $mod+Shift+bracketleft move container to workspace prev_on_output; workspace prev_on_output
    bindsym $mod+Shift+bracketright move container to workspace next_on_output; workspace next_on_output
    bindsym --whole-window --border $mod+Shift+$mouse_scroll_up move container to workspace prev_on_output; workspace prev_on_output
    bindsym --whole-window --border $mod+Shift+$mouse_scroll_down move container to workspace next_on_output; workspace next_on_output
    # Send focused container to workspace
    #? Control+Super+Shift+1                | Move focused window to workspace 1
    #? Control+Super+Shift+2                | Move focused window to workspace 2
    #? Control+Super+Shift+3                | Move focused window to workspace 3
    #? Control+Super+Shift+4                | Move focused window to workspace 4
    #? Control+Super+Shift+5                | Move focused window to workspace 5
    #? Control+Super+Shift+6                | Move focused window to workspace 6
    #? Control+Super+Shift+7                | Move focused window to workspace 7
    #? Control+Super+Shift+8                | Move focused window to workspace 8
    #? Control+Super+Shift+9                | Move focused window to workspace 9
    #? Control+Super+Shift+0                | Move focused window to workspace 10
    #? Control+Super+Shift+[                | Move focused window to previous workspace on display
    #? Control+Super+Shift+]                | Move focused window to next workspace on display
    bindsym $mod+Control+Shift+1 move container to workspace number 1
    bindsym $mod+Control+Shift+2 move container to workspace number 2
    bindsym $mod+Control+Shift+3 move container to workspace number 3
    bindsym $mod+Control+Shift+4 move container to workspace number 4
    bindsym $mod+Control+Shift+5 move container to workspace number 5
    bindsym $mod+Control+Shift+6 move container to workspace number 6
    bindsym $mod+Control+Shift+7 move container to workspace number 7
    bindsym $mod+Control+Shift+8 move container to workspace number 8
    bindsym $mod+Control+Shift+9 move container to workspace number 9
    bindsym $mod+Control+Shift+0 move container to workspace number 10
    bindsym $mod+Control+Shift+bracketleft move container to workspace prev_on_output
    bindsym $mod+Control+Shift+bracketright move container to workspace next_on_output

    #
    # Layout stuff
    #

    #? Super+b          | Cycle through window border modes
    bindsym $mod+b border toggle
    #? Super+f          | Toggle fullscreen on focused window
    bindsym $mod+f fullscreen
    #? Super+Shift+f    | Toggle sticky on focused window
    bindsym $mod+Shift+f sticky toggle
    #? Super+Space      | Toggle floating on focused window
    bindsym $mod+Space floating toggle
    #? Super+Space      | Swap focus between the tiling area and the floating area
    bindsym $mod+Shift+Space focus mode_toggle
    #? Super+a          | Move focus to the parent container
    bindsym $mod+a focus parent

    #
    # Screenshots
    #

    # Screenshots will copy to the clipboard by default
    # When holding Control, write to the ~/Pictures directory instead

    #? PrintScreen               | Screenshot focused window to clipboard
    #? Control+PrintScreen       | Screenshot focused window to ~/Pictures
    bindsym Print exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy
    bindsym Control+Print exec grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.focused?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"')"

    #? Alt+PrintScreen           | Screenshot entire desktop to clipboard
    #? Control+Alt+PrintScreen   | Screenshot entire desktop to ~/Pictures
    bindsym $alt+Print exec grim - | wl-copy
    bindsym $alt+Control+Print exec grim

    #? Super+PrintScreen         | Screenshot mouse selection to clipboard
    #? Control+Super+PrintScreen | Screenshot mouse selection to ~/Pictures
    bindsym $mod+Print exec grim -g "$(slurp)" - | wl-copy
    bindsym $mod+Control+Print exec grim -g "$(slurp)"


    #
    # Scratchpad
    #

    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    #? Super+Shift+Minus         | Move focused window to scratchpad; hide focused window
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    #? Super+Minus               | Cycle focused window with scratchpad windows; cycle focused window with hidden windows
    bindsym $mod+minus scratchpad show

    #
    # Media/brightness buttons
    #

    #? AudioMute                 | Toggle mute
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && ([[ $(pactl get-sink-mute @DEFAULT_SINK@ | cut -d' ' -f2) = 'yes' ]] && echo '0' || pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}') > $WOBSOCK

    #? AudioVolumeUp             | Raise volume by 5%
    #? AudioVolumeDown           | Lower volume by 5%
    #? Shift+AudioVolumeUp       | Raise volume by 1%
    #? Shift+AudioVolumeDown     | Lower volume by 1%
    bindsym XF86AudioRaiseVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ +5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    bindsym XF86AudioLowerVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ -5% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    bindsym Shift+XF86AudioRaiseVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ +1% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK
    bindsym Shift+XF86AudioLowerVolume exec pactl set-sink-mute @DEFAULT_SINK@ 0 && pactl set-sink-volume @DEFAULT_SINK@ -1% && pactl get-sink-volume @DEFAULT_SINK@ | head -n 1 | awk '{print substr($5, 1, length($5)-1)}' > $WOBSOCK

    #? BrightnessUp              | Raise brightness by 5%
    #? BrightnessDown            | Lower brightness by 5%
    #? Shift+BrightnessUp        | Raise brightness by 1%
    #? Shift+BrightnessDown      | Lower brightness by 1%
    bindsym XF86MonBrightnessUp output * enable; exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym XF86MonBrightnessDown output * enable; exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym Shift+XF86MonBrightnessUp output * enable; exec brightnessctl set +1% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    bindsym Shift+XF86MonBrightnessDown output * enable; exec brightnessctl set 1%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK

    #? AudioPlay                 | Toggle audio player play/pause
    #? AudioNext                 | Play audio play next track
    #? AudioPrev                 | Play audio play previous track
    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous

    #
    # Resizing containers
    #

    #? Super+r              | Enable "resize" mode (disable with Escape/Space/Enter)
    bindsym $mod+r mode "resize"

    mode "resize" {
        # Minus/Equal will shrink/grow container width
        # Add Shift to shrink/grow height
        #? [resize] Minus       | In "resize" mode, shrink container width 10px
        #? [resize] Equal       | In "resize" mode, grow container width 10px
        #? [resize] Shift+Minus | In "resize" mode, shrink container height 10px
        #? [resize] Shift+Equal | In "resize" mode, grow container height 10px
        bindsym minus resize shrink width 10px
        bindsym equal resize grow width 10px
        bindsym Shift+minus resize shrink height 10px
        bindsym Shift+equal resize grow height 10px

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Space mode "default"
    }

    #
    # Modify container opacity
    #

    #? Super+o          | Enable "opacity" mode (disable with Escape/Space/Enter)
    bindsym $mod+o mode "opacity"
    #? Super+<          | Reduce current focused window opacity by 10%
    #? Super+>          | Increase current focused window opacity by 10%
    bindsym $mod+less opacity minus 0.1
    bindsym $mod+greater opacity plus 0.1

    mode "opacity" {
        #? [opacity] h      | In "opacity" mode, decrease focused container opacity by 10%
        #? [opacity] j      | In "opacity" mode, decrease focused container opacity by 5
        #? [opacity] k      | In "opacity" mode, increase focused container opacity by 5%
        #? [opacity] l      | In "opacity" mode, increase focused container opacity by 10%
        bindsym $left opacity minus 0.1
        bindsym $down opacity minus 0.05
        bindsym $up opacity plus 0.05
        bindsym $right opacity plus 0.1

        #? [opacity] Left   | In "opacity" mode, decrease focused container opacity by 10%
        #? [opacity] Down   | In "opacity" mode, decrease focused container opacity by 5
        #? [opacity] Up     | In "opacity" mode, increase focused container opacity by 5%
        #? [opacity] Right  | In "opacity" mode, increase focused container opacity by 10%
        bindsym Left opacity minus 0.1
        bindsym Down opacity minus 0.05
        bindsym Up opacity plus 0.05
        bindsym Right opacity plus 0.1

        #? [opacity] Minus  | In "opacity" mode, decrease focused container opacity by 10%
        #? [opacity] Equal  | In "opacity" mode, increase focused container opacity by 10%
        bindsym minus opacity minus 0.1
        bindsym equal opacity plus 0.1

        #? [opacity] 1      | In "opacity" mode, set focused container opacity to 10%
        #? [opacity] 2      | In "opacity" mode, set focused container opacity to 20%
        #? [opacity] 3      | In "opacity" mode, set focused container opacity to 30%
        #? [opacity] 4      | In "opacity" mode, set focused container opacity to 40%
        #? [opacity] 5      | In "opacity" mode, set focused container opacity to 50%
        #? [opacity] 6      | In "opacity" mode, set focused container opacity to 60%
        #? [opacity] 7      | In "opacity" mode, set focused container opacity to 70%
        #? [opacity] 8      | In "opacity" mode, set focused container opacity to 80%
        #? [opacity] 9      | In "opacity" mode, set focused container opacity to 90%
        #? [opacity] 0      | In "opacity" mode, set focused container opacity to 100%
        bindsym 1 opacity 0.1
        bindsym 2 opacity 0.2
        bindsym 3 opacity 0.3
        bindsym 4 opacity 0.4
        bindsym 5 opacity 0.5
        bindsym 6 opacity 0.6
        bindsym 7 opacity 0.7
        bindsym 8 opacity 0.8
        bindsym 9 opacity 0.9
        bindsym 0 opacity 1

        # Return to default mode
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym Space mode "default"
    }

    #
    # System controls:
    #

    #? Super+Escape              | Lock the screen
    bindsym $mod+Escape exec $lock
    #? Super+Shift+Escape        | Open the power menu
    bindsym $mod+Shift+Escape exec "~/.config/sway/powermenu.sh"
    #? Super+q                   | Dismiss all notifications
    bindsym $mod+q exec "makoctl dismiss -a"
    #? Super+`                   | Restore most recently dismissed notification
    bindsym $mod+grave exec "makoctl restore"
    #? Alt+p                     | Focus most recent urgent window
    bindsym $alt+space exec 'swaymsg [urgent="latest"] focus'
    #? Super+p                   | Open clipboard manager
    bindsym $mod+p exec clipman pick -t wofi
    #? Super+?                   | Show hotkeys; help cheatsheet
    bindsym $mod+Shift+slash exec "~/.config/sway/hotkeys.sh"

#
# Specific app settings
#

    # No borders for browsers
    for_window [app_id="firefox"] border none
    for_window [app_id="google-chrome"] border none
    # Disable swayidle during browser fullscreen
    for_window [app_id="firefox"] inhibit_idle fullscreen
    for_window [app_id="google-chrome"] inhibit_idle fullscreen
    # Set default workspace for some apps
    for_window [class="Google-chrome" title="^Google Chat -.*"] move container to workspace 3
    for_window [class="Google-chrome" title="^Chrome Remote Desktop - Remote Access -.*"] move container to workspace 4
    # Steam
    for_window [class="Steam"] floating enable
    # Always float some applications by default
    for_window [app_id="pavucontrol"] floating enable
    for_window [app_id="blueman-manager"] {
        floating enable
        resize set height 50 ppt
        resize set width 10 ppt
        move position 69 ppt 1 ppt
    }
    for_window [app_id="nmtui"] {
        floating enable
        resize set height 75 ppt
        resize set width 50 ppt
    }
    for_window [app_id="prompt"] {
        floating enable
        sticky enable
    }
    for_window [window_role="pop-up"] {
        floating enable
        resize set height 50 ppt
        resize set width 50 ppt
        move position 50 ppt 1 ppt
        inhibit_idle
    }
    for_window [title="Picture in picture"] {
        floating enable
        resize set height 50 ppt
        resize set width 50 ppt
        move position 50 ppt 1 ppt
        inhibit_idle
    }
    for_window [app_id="mpv"] {
        floating enable
        resize set height 50 ppt
        resize set width 50 ppt
        move position 50 ppt 1 ppt
        inhibit_idle
    }
    # Hide some windows automatically
    for_window [title="meet.google.com is sharing your screen."] {
        move scratchpad
    }
    # Switch to urgent windows automatically
    # Options: "first", "last", "latest", "newest", "oldest", "recent"
    for_window [urgent="latest"] focus

#
# System config
#
    include /etc/sway/config.d/*
