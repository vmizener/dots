##########
# Initialization
##########

# Constants

    # Notable key aliases (mod is super/meta)
    $MOD = SUPER

    $FSLASH = code:61

    # Common applications/scripts/paths
    $CONFIG = $HOME/.config/hypr
    $TERM = kitty

#  Programs & Daemons

    exec-once = $CONFIG/daemons.sh

    exec-once = discord &
    exec-once = steam-native &
    exec-once = streamlink-twitch-gui &

# Source a file (multi-file configs)
# source = ~/.config/hypr/myColors.conf

##########
# Hyprland Settings
##########

# See https://wiki.hyprland.org/Configuring/Monitors/
    monitor=,preferred,auto,auto


# See https://wiki.hyprland.org/Configuring/Keywords/ for more

# For all categories, see https://wiki.hyprland.org/Configuring/Variables/
input {
    kb_layout = us
    kb_variant =
    kb_model =
    kb_options =
    kb_rules =

    follow_mouse = 1

    touchpad {
        natural_scroll = no
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.

}

binds {
    scroll_event_delay = 0
}

general {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    gaps_in = 5
    gaps_out = 10
    border_size = 2
    col.active_border = rgba(33ccffee) rgba(00ff99ee) 45deg
    col.inactive_border = rgba(595959aa)

    layout = dwindle
}

decoration {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more

    rounding = 10

    drop_shadow = yes
    shadow_range = 4
    shadow_render_power = 3
    col.shadow = rgba(1a1a1aee)
}

animations {
    enabled = yes

    # Some default animations, see https://wiki.hyprland.org/Configuring/Animations/ for more

    bezier = myBezier, 0.05, 0.9, 0.1, 1.05

    animation = windows, 1, 7, myBezier
    animation = windowsOut, 1, 7, default, popin 80%
    animation = border, 1, 10, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 7, default
    animation = workspaces, 1, 6, default, fade
}

dwindle {
    # See https://wiki.hyprland.org/Configuring/Dwindle-Layout/ for more
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
    no_gaps_when_only = yes
}

master {
    # See https://wiki.hyprland.org/Configuring/Master-Layout/ for more
    new_is_master = true
}

gestures {
    # See https://wiki.hyprland.org/Configuring/Variables/ for more
    workspace_swipe = off
}

# Example per-device config
device:epic mouse V1 {
    sensitivity = -0.5
}


##########
# Key Binds
##########

# Basics

    #? Super+Return              | Start a terminal
    bind = $MOD, return, exec, $TERM
    #? Super+d                   | Start application launcher
    bind = $MOD, d, exec, wofi --show drun
    #? Super+Shift+q             | Kill focused window
    #? Super+Control+MouseRight  | Kill focused window
    bind = $MOD SHIFT, Q, killactive,
    bind = $MOD CONTROL, mouse:273, killactive,

# System

    #? Super+MouseLeft           | Move window
    #? Super+MouseRight          | Resize window
    bindm = $MOD, mouse:272, movewindow
    bindm = $MOD, mouse:273, resizewindow
    #? Super+e                   | Dismiss all notifications
    bind = $MOD, e, exec, makoctl dismiss -a
    #? Super+Shift+e             | Restore most recently dismissed notification
    bind = $MOD SHIFT, E, exec, makoctl restore
    #? Super+p                   | Open clipboard manager
    # bindsym $mod+p exec "~/.config/sway/clip_manager.sh"
    bind = $MOD, p, exec, cliphist list | wofi -d | cliphist decode | wl-copy
    #? Super+?                   | Show hotkeys; help cheatsheet
    bind = $MOD SHIFT, $FSLASH, exec, $CONFIG/hotkeys.sh

# Layout

    #? Super+Shift+p    | Toggle sticky/pin on focused window
    bind = $MOD SHIFT, P, pin
    #? Super+Space      | Toggle floating on focused window
    bind = $MOD, space, togglefloating,
    #? Super+t          | Open empty workspace
    bind = $MOD, t, workspace, empty

# Movement

    # Use Vim keys to move focus
    #? Super+h     | Move focus left
    #? Super+j     | Move focus down
    #? Super+k     | Move focus up
    #? Super+l     | Move focus right
    bind = $MOD, h, movefocus, l
    bind = $MOD, l, movefocus, r
    bind = $MOD, j, movefocus, u
    bind = $MOD, k, movefocus, d
    #? Super+Left  | Move focus left
    #? Super+Down  | Move focus down
    #? Super+Up    | Move focus up
    #? Super+Right | Move focus right
    bind = $MOD, left, movefocus, l
    bind = $MOD, right, movefocus, r
    bind = $MOD, down, movefocus, u
    bind = $MOD, up, movefocus, d

    # Move the focused window around by adding Shift
    #? Super+Shift+h      | Move focused window left
    #? Super+Shift+j      | Move focused window down
    #? Super+Shift+k      | Move focused window up
    #? Super+Shift+l      | Move focused window right
    bind = $MOD SHIFT, h, movewindow, l
    bind = $MOD SHIFT, l, movewindow, r
    bind = $MOD SHIFT, j, movewindow, d
    bind = $MOD SHIFT, k, movewindow, u
    #? Super+Shift+Left   | Move focused window left
    #? Super+Shift+Down   | Move focused window down
    #? Super+Shift+Up     | Move focused window up
    #? Super+Shift+Right  | Move focused window right
    bind = $MOD SHIFT, left, movewindow, l
    bind = $MOD SHIFT, right, movewindow, r
    bind = $MOD SHIFT, down, movewindow, d
    bind = $MOD SHIFT, up, movewindow, u

    # Move the focused workspace around by adding Control+Shift
    #? Super+Control+Shift+h     | Move focused workspace left
    #? Super+Control+Shift+j     | Move focused workspace down
    #? Super+Control+Shift+k     | Move focused workspace up
    #? Super+Control+Shift+l     | Move focused workspace right
    bind = $MOD CTRL SHIFT, h, movecurrentworkspacetomonitor, l
    bind = $MOD CTRL SHIFT, l, movecurrentworkspacetomonitor, r
    bind = $MOD CTRL SHIFT, j, movecurrentworkspacetomonitor, d
    bind = $MOD CTRL SHIFT, k, movecurrentworkspacetomonitor, u
    #? Super+Control+Shift+Left  | Move focused workspace left
    #? Super+Control+Shift+Down  | Move focused workspace down
    #? Super+Control+Shift+Up    | Move focused workspace up
    #? Super+Control+Shift+Right | Move focused workspace right
    bind = $MOD CTRL SHIFT, left, movecurrentworkspacetomonitor, l
    bind = $MOD CTRL SHIFT, right, movecurrentworkspacetomonitor, r
    bind = $MOD CTRL SHIFT, down, movecurrentworkspacetomonitor, d
    bind = $MOD CTRL SHIFT, up, movecurrentworkspacetomonitor, u

    # Switch to workspace
    #? Super+1                   | Switch to workspace 1
    #? Super+2                   | Switch to workspace 2
    #? Super+3                   | Switch to workspace 3
    #? Super+4                   | Switch to workspace 4
    #? Super+5                   | Switch to workspace 5
    #? Super+6                   | Switch to workspace 6
    #? Super+7                   | Switch to workspace 7
    #? Super+8                   | Switch to workspace 8
    #? Super+9                   | Switch to workspace 9
    #? Super+0                   | Switch to workspace 10
    #? Super+Backslash           | Switch to last focused workspace
    #? Super+Backtick/Grave      | Switch to last focused workspace
    #? Super+[                   | Switch to previous workspace on display
    #? Super+]                   | Switch to next workspace on display
    #? Super+Shift+Tab           | Switch to previouw workspace on display
    #? Super+Tab                 | Switch to next workspace on display
    #? Super+MouseScrollUp       | Switch to previous workspace on display
    #? Super+MouseScrollDown     | Switch to next workspace on display
    bind = $MOD, 1, workspace, 1
    bind = $MOD, 2, workspace, 2
    bind = $MOD, 3, workspace, 3
    bind = $MOD, 4, workspace, 4
    bind = $MOD, 5, workspace, 5
    bind = $MOD, 6, workspace, 6
    bind = $MOD, 7, workspace, 7
    bind = $MOD, 8, workspace, 8
    bind = $MOD, 9, workspace, 9
    bind = $MOD, 0, workspace, 10
    bind = $MOD, backslash, workspace, previous
    bind = $MOD, grave, workspace, previous
    bind = $MOD, bracketright, workspace, m+1
    bind = $MOD, bracketleft, workspace, m-1
    bind = $MOD, tab, workspace, m+1
    bind = $MOD SHIFT, tab, workspace, m-1
    bind = $MOD, mouse_up, workspace, m+1
    bind = $MOD, mouse_down, workspace, m-1

    # Send focused container to workspace and switch to it
    #? Super+Shift+1                  | Move focused window to workspace 1 and switch to it
    #? Super+Shift+2                  | Move focused window to workspace 2 and switch to it
    #? Super+Shift+3                  | Move focused window to workspace 3 and switch to it
    #? Super+Shift+4                  | Move focused window to workspace 4 and switch to it
    #? Super+Shift+5                  | Move focused window to workspace 5 and switch to it
    #? Super+Shift+6                  | Move focused window to workspace 6 and switch to it
    #? Super+Shift+7                  | Move focused window to workspace 7 and switch to it
    #? Super+Shift+8                  | Move focused window to workspace 8 and switch to it
    #? Super+Shift+9                  | Move focused window to workspace 9 and switch to it
    #? Super+Shift+0                  | Move focused window to workspace 10 and switch to it
    #? Super+Shift+Backslash          | Move focused window to last focused workspace and switch to it
    #? Super+Shift+Backtick/Grave     | Move focused window to last focused workspace and switch to it
    #? Super+Shift+[                  | Move focused window to previous workspace on display and switch to it
    #? Super+Shift+]                  | Move focused window to next workspace on display and switch to it
    #? Super+Shift+MouseScrollUp      | Move focused window to previous workspace on display and switch to it
    #? Super+Shift+MouseScrollDown    | Move focused window to next workspace on display and switch to it
    #? Super+Control+MouseScrollUp    | Move focused window to previous workspace on display and switch to it
    #? Super+Control+MouseScrollDown  | Move focused window to next workspace on display and switch to it
    bind = $MOD SHIFT, 1, movetoworkspace, 1
    bind = $MOD SHIFT, 2, movetoworkspace, 2
    bind = $MOD SHIFT, 3, movetoworkspace, 3
    bind = $MOD SHIFT, 4, movetoworkspace, 4
    bind = $MOD SHIFT, 5, movetoworkspace, 5
    bind = $MOD SHIFT, 6, movetoworkspace, 6
    bind = $MOD SHIFT, 7, movetoworkspace, 7
    bind = $MOD SHIFT, 8, movetoworkspace, 8
    bind = $MOD SHIFT, 9, movetoworkspace, 9
    bind = $MOD SHIFT, 0, movetoworkspace, 10
    bind = $MOD SHIFT, backslash, movetoworkspace, previous
    bind = $MOD SHIFT, grave, movetoworkspace, previous
    bind = $MOD SHIFT, bracketright, movetoworkspace, m+1
    bind = $MOD SHIFT, bracketleft, movetoworkspace, m-1
    bind = $MOD SHIFT, mouse_up, movetoworkspace, m+1
    bind = $MOD SHIFT, mouse_down, movetoworkspace, m-1
    bind = $MOD CONTROL, mouse_up, movetoworkspace, m+1
    bind = $MOD CONTROL, mouse_down, movetoworkspace, m-1

    # Send focused container to workspace and _don't_ switch to it
    #? Super+Control+Shift+1                | Move focused window to workspace 1
    #? Super+Control+Shift+2                | Move focused window to workspace 2
    #? Super+Control+Shift+3                | Move focused window to workspace 3
    #? Super+Control+Shift+4                | Move focused window to workspace 4
    #? Super+Control+Shift+5                | Move focused window to workspace 5
    #? Super+Control+Shift+6                | Move focused window to workspace 6
    #? Super+Control+Shift+7                | Move focused window to workspace 7
    #? Super+Control+Shift+8                | Move focused window to workspace 8
    #? Super+Control+Shift+9                | Move focused window to workspace 9
    #? Super+Control+Shift+0                | Move focused window to workspace 10
    #? Super+Control+Shift+Backslash        | Move focused window to last focused workspace
    #? Super+Control+Shift+Backtick/Grave   | Move focused window to last focused workspace
    #? Super+Control+Shift+[                | Move focused window to previous workspace on display
    #? Super+Control+Shift+]                | Move focused window to next workspace on display
    bind = $MOD CONTROL SHIFT, 1, movetoworkspacesilent, 1
    bind = $MOD CONTROL SHIFT, 2, movetoworkspacesilent, 2
    bind = $MOD CONTROL SHIFT, 3, movetoworkspacesilent, 3
    bind = $MOD CONTROL SHIFT, 4, movetoworkspacesilent, 4
    bind = $MOD CONTROL SHIFT, 5, movetoworkspacesilent, 5
    bind = $MOD CONTROL SHIFT, 6, movetoworkspacesilent, 6
    bind = $MOD CONTROL SHIFT, 7, movetoworkspacesilent, 7
    bind = $MOD CONTROL SHIFT, 8, movetoworkspacesilent, 8
    bind = $MOD CONTROL SHIFT, 9, movetoworkspacesilent, 9
    bind = $MOD CONTROL SHIFT, 0, movetoworkspacesilent, 10
    bind = $MOD CONTROL SHIFT, backslash, movetoworkspacesilent, previous
    bind = $MOD CONTROL SHIFT, grave, movetoworkspacesilent, previous
    bind = $MOD CONTROL SHIFT, bracketright, movetoworkspacesilent, m+1
    bind = $MOD CONTROL SHIFT, bracketleft, movetoworkspacesilent, m-1

# Screenshots

    # Screenshots will copy to the clipboard by default
    # When holding Control, write to the ~/Pictures directory instead

    #? PrintScreen               | Screenshot focused window to clipboard
    #? Control+PrintScreen       | Screenshot focused window to ~/Pictures
    bind = , Print, exec, grim -g "$(hyprctl clients -j | jq -r '.[] | select(.focusHistoryID==0) | "\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"')" - | wl-copy
    bind = CONTROL, Print, exec, grim -g "$(hyprctl clients -j | jq -r '.[] | select(.focusHistoryID==0) | "\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"')"

    #? Alt+PrintScreen           | Screenshot entire desktop to clipboard
    #? Control+Alt+PrintScreen   | Screenshot entire desktop to ~/Pictures
    bind = $MOD ALT, Print, exec, grim - | wl-copy
    bind = $MOD CONTROL ALT, Print, exec, grim

    #? Super+PrintScreen         | Screenshot mouse selection to clipboard
    #? Super+Control+PrintScreen | Screenshot mouse selection to ~/Pictures
    bind = $MOD, Print, exec, grim -g "$(slurp)" - | wl-copy
    bind = $MOD CONTROL, Print, exec, grim -g "$(slurp)"

# Resize Mode

    #? Super+r              | Enable "resize" mode (disable with Escape/Space/Enter)
    bind = $MOD, R, submap, resize

    submap = resize
        # Minus/Equal will shrink/grow container width
        # Add Shift to shrink/grow height
        #? [resize] Minus       | In "resize" mode, shrink container width 10px
        #? [resize] Equal       | In "resize" mode, grow container width 10px
        #? [resize] Shift+Minus | In "resize" mode, shrink container height 10px
        #? [resize] Shift+Equal | In "resize" mode, grow container height 10px
        binde = , minus, resizeactive, -10 0
        binde = , equal, resizeactive, 10 0
        binde = SHIFT, minus, resizeactive, 0 -10
        binde = SHIFT, equal, resizeactive, 0 10
        #? [resize] h | In "resize" mode, shrink container width 10px
        #? [resize] j | In "resize" mode, grow container height 10px
        #? [resize] k | In "resize" mode, shrink container height 10px
        #? [resize] l | In "resize" mode, grow container width 10px
        binde = , h, resizeactive, -10 0
        binde = , j, resizeactive, 0 10
        binde = , k, resizeactive, 0 -10
        binde = , l, resizeactive, 10 0

        # Return to default mode
        #? [resize] Escape | Exits "resize" mode
        #? [resize] Space  | Exits "resize" mode
        #? [resize] Return | Exits "resize" mode
        bind = , escape, submap, reset
        bind = , return, submap, reset
        bind = , space, submap, reset
    submap = reset

##########
# Window Rules
##########

# PiP
windowrulev2 = float,title:^(Picture in picture)$,class:^$
# Prompt
windowrule = float,^prompt$
# MPV
windowrule = float,^(mpv)$
windowrule = size 36.771% 33.167%,^(mpv)$
windowrule = move 61.875% 4%,^(mpv)$
# Streamlink
windowrulev2 = workspace 9,title:^(Streamlink Twitch GUI)$,class:^(streamlink-twitch-gui)$
# Dota 2
windowrulev2 = workspace 10,title:^(Dota 2)$,class:^(dota2)$
windowrulev2 = tile,title:^(Dota 2)$,class:^(dota2)$
# windowrulev2 = forceinput,title:^(Dota 2)$,class:^(dota2)$
# Comms
windowrule = workspace 3,^(discord)$
#windowrule = workspace name:comms,^(Steam)$
windowrule = float,workspace 8,^(Steam)$
windowrulev2 = tile,workspace 8,title:^(Friends List)$,class:^(Steam)$

# Set bordercolor to red if window is pinned
windowrulev2 = bordercolor rgb(FF0000) rgb(880808),pinned:1
