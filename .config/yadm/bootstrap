#!/usr/bin/env bash

#################
# Lib functions
#################

function log () {
    printf "@BOOTSTRAPPER[$1]: $2\n"
}
function query () {
    read -e -p "@BOOTSTRAPPER[PROMPT]: $1 [YyNn] " -n 1 -r
    if [[ ${REPLY} =~ ^[Yy]$ ]]; then
        exit 0
    elif [[ ${REPLY} =~ ^[Nn]$ ]]; then
        exit 1
    else
        log ERROR "Please answer Y or N";
	query $1
    fi
}
function prompt () {
    read -p "@BOOTSTRAPPER[PROMPT]: $1 " -r
    return ${REPLY}
}

#################
# Initializer
#################

cd ${HOME}
case $(uname -s) in
    *Darwin*)
        log INFO "Starting bootstrap for MacOS"
        system_type='Darwin'
        ;;
    *)
        log ERROR "Unsupported OS"
        exit 1
        ;;
esac

#################
# MacOS
#################
if [ "${system_type}" = "Darwin" ]; then
    PACKAGES=(
        neovim
        yadm
    )

    if ! command -v brew >/dev/null 2>&1; then
        log INFO "Installing Homebrew"
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    else
        log INFO "Updating Homebrew"
        brew update
    fi

    brew install ${PACKAGES[@]}

fi
#################
# Post-Install
#################

if ! $(yadm list &>/dev/nullA); then
    log INFO "Setting up YADM"
    yadm clone "https://github.com/vmizener/dots.git"
fi

if command -v python3 >/dev/null 2>&1; then
    log INFO "Updating Python"
    pip3 install -r .config/yadm/requirements.txt --user
    pip3 install --upgrade pip --user
fi


if command -v nvim >/dev/null 2>&1; then
    echo "Updating Neovim"
    if [ ! -f ~/.local/share/nvim/site/autoload/plug.vim ]; then
        log INFO "Installing Vim-Plug"
        sh -c 'curl -fLo "${XDG_DATA_HOME:-$HOME/.local/share}"/nvim/site/autoload/plug.vim --create-dirs \
            https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
    fi
    nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'
fi

#################
# Cleanup
#################

log INFO "Bootstrap completed successfully!"
